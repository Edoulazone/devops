version: '3.8'

services:
  # üóÑÔ∏è DATABASE (Shared by all services)
  database:
    image: postgres:15-alpine
    container_name: transcendence-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: transcendence_dev
      POSTGRES_USER: transcendence
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/database/init:/docker-entrypoint-initdb.d
    networks:
      - transcendence-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transcendence"]
      interval: 30s
      timeout: 10s
      retries: 5

  # üîß BACKEND SERVICE (Partie A)
  backend_a:
    build:
      context: ../backend_a
      dockerfile: ../devops_e/docker/backend/Dockerfile
    container_name: transcendence-backend
    ports:
      - "3000:3000"
    environment:
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_DB: transcendence_dev
      POSTGRES_USER: transcendence
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: postgresql://transcendence:dev_secure_f8a9c2e1b4d7@database:5432/transcendence_dev
      NODE_ENV: development
      JWT_SECRET: ${JWT_SECRET:-default_jwt_secret}
      PORT: 3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - transcendence-network
    volumes:
      - ../backend_a:/app
      - /app/node_modules

  # üé® FRONTEND SERVICE (Partie B)
  frontend_b:
    build:
      context: ../frontend_b
      dockerfile: ../devops_e/docker/frontend/Dockerfile.dev
    container_name: transcendence-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_AUTH_URL: http://localhost:3001
      VITE_GAME_URL: ws://localhost:3002
      VITE_APP_TITLE: Transcendence Dev
      VITE_NODE_ENV: development
      VITE_HMR_HOST: 0.0.0.0
    volumes:
      - ../frontend_b:/app
      - /app/node_modules
    networks:
      - transcendence-network
    depends_on:
      - backend_a

  # üîê AUTH SERVICE (Partie C)
  auth_c:
    build:
      context: ../auth_c
      dockerfile: ../devops_e/docker/auth/Dockerfile
    container_name: transcendence-auth
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://transcendence:dev_secure_f8a9c2e1b4d7@database:5432/transcendence_dev
      JWT_SECRET: ${JWT_SECRET:-default_jwt_secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-default_refresh_secret}
      OAUTH_42_CLIENT_ID: ${OAUTH_42_CLIENT_ID}
      OAUTH_42_CLIENT_SECRET: ${OAUTH_42_CLIENT_SECRET}
      OAUTH_42_CALLBACK_URL: http://localhost:3001/auth/42/callback
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      TWO_FA_SERVICE_NAME: Transcendence
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - transcendence-network
    volumes:
      - ../auth_c:/app
      - /app/node_modules

  # üéÆ GAME SERVICE (Partie D)
  game_d:
    build:
      context: ../game_d
      dockerfile: ../devops_e/docker/game/Dockerfile
    container_name: transcendence-game
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      WEBSOCKET_PORT: 3002
      DATABASE_URL: postgresql://transcendence:dev_secure_f8a9c2e1b4d7@database:5432/transcendence_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GAME_MAX_PLAYERS_PER_ROOM: 4
      GAME_ROOM_CLEANUP_INTERVAL: 300000
      GAME_PING_INTERVAL: 25000
      GAME_PING_TIMEOUT: 60000
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - transcendence-network
    volumes:
      - ../game_d:/app
      - /app/node_modules

  # üåê NGINX REVERSE PROXY
  nginx:
    image: nginx:alpine
    container_name: transcendence-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend_a
      - frontend_b
      - auth_c
      - game_d
    networks:
      - transcendence-network
    restart: unless-stopped

  # üì¶ REDIS (Cache & Sessions)
  redis:
    image: redis:7-alpine
    container_name: transcendence-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - transcendence-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä PROMETHEUS (Metrics)
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: transcendence-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - transcendence-network
    restart: unless-stopped

  # üìà GRAFANA (Dashboards)
  grafana:
    image: grafana/grafana-oss:12.1.1
    container_name: transcendence-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - ../monitoring/grafana/data:/var/lib/grafana                # <-- bind mount
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    depends_on:
      - prometheus

  # üì¶ CADVISOR (Container metrics)
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: transcendence-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - transcendence-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  transcendence-network:
    driver: bridge